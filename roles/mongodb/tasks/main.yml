---

- name: include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution_release }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: [ mongodb, sweagle, sweagle-mongo ]

-debug:
  msg: "For insytall: {{ force_local_installation }}"

- name: include installation tasks
  include_tasks: "{{ item }}"
  with_first_found:
    - "install.{{ ansible_distribution | lower }}.yml"
    - "install.{{ ansible_os_family | lower }}.yml"
  when: not force_local_installation
  tags: mongodb

- name: include installation tasks from local
  include_tasks: "install.local.yml"
  when: force_local_installation
  tags: mongodb

- name: include configuration.yml
  include_tasks: configure.yml
  tags: mongodb

- name: include SWEAGLE configuration.yml
  include_tasks: configure-sweagle.yml
  tags: [ mongodb, sweagle, sweagle-mongodb ]

- name: include replication and auth configuration
  include_tasks: replication_init_auth.yml
  when: ( mongodb_replication_replset | length > 0
        and mongodb_security_authorization == 'enabled'
        and mongodb_master is defined and mongodb_master )
  tags: mongodb

- name: include replication configuration
  include_tasks: replication.yml
  when: mongodb_replication_replset | length > 0
  tags: [mongodb]

- name: Check where admin user already exists
  command: >
    mongo --quiet -u {{ mongodb_user_admin_name }} \
          -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin
  register: mongodb_user_admin_check
  changed_when: false
  check_mode: no
  ignore_errors: true
  when: ( mongodb_security_authorization == 'enabled'
          and not mongodb_replication_replset )
  no_log: true
  tags: mongodb

- name: include authorization configuration
  include_tasks: auth_initialization.yml
  when: ( mongodb_security_authorization == 'enabled'
          and not mongodb_replication_replset
          and mongodb_user_admin_check.rc != 0 )
  tags: mongodb

- name: Create normal users with replicaset
  mongodb_user:
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_login_port|default(27017) }}"
    login_host: "{{ mongodb_login_host|default('localhost') }}"
  with_items:
    - "{{ mongodb_users | default([]) }}"
  when: ( mongodb_replication_replset
        and mongodb_security_authorization == 'enabled'
        and mongodb_master is defined and mongodb_master )
  no_log: true
  tags: [mongodb]

- name: Create normal users without replicaset
  mongodb_user:
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_net_port }}"
  with_items:
    - "{{ mongodb_users | default([]) }}"
  when: ( mongodb_security_authorization == 'enabled'
          and not mongodb_replication_replset )
  no_log: true
  tags: [mongodb]

- name: Create oplog user with replicaset
  mongodb_user:
    database: admin
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles:
      - db: local
        role: read
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_login_port|default(27017) }}"
    login_host: "{{ mongodb_login_host|default('localhost') }}"
  with_items:
    - "{{ mongodb_oplog_users | default([]) }}"
  when: ( mongodb_replication_replset | length > 0
        and mongodb_security_authorization == 'enabled'
        and mongodb_master is defined and mongodb_master )
  no_log: false
  tags: [mongodb]

- name: include MMS Agent configuration
  include_tasks: mms-agent.yml
  when: mongodb_mms_api_key | length > 0
  tags: mongodb
